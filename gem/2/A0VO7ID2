發信人: BioStar.bbs@micro.bio.ncue.edu.tw (澎湖小雲雀) 看板: plan
標  題: [文件] 小弟整理過的「全文搜索」
發信站: 擎天崗 (Wed, 08 Oct 2003 13:46:57 +0800 (CST))    Updated: 2007/04/26

將各位大大的文章整理一下......
然後用 userno + 10000 作為 SHMKEY ......
filter_full_1 和 filter_full_2 合併...  用參數來作為父子程序區別...
用 malloc 配置記憶體來放置全篇文章...  而非固定大小的陣列...
可以節省記憶體並且避免文章太大超過陣列大小！

: config.h

#define STATUS_MGEMOVER BFLAG(7)        /* 個人精華區過多 */
+ #define STATUS_SHM    BFLAG(8)        /* 使用 shm */

: maple/xpost.c

static int
XoXpost2(xo, hdr, on, off, fchk_1, fchk_2)
  XO *xo;
  HDR *hdr;     /* 搜尋的條件 */
  int on, off;
  int (*fchk_1) (); /* 搜尋的函式 */
  int (*fchk_2) ();
{
  int *xlist, fsize, max, locus, *ptr, xyshmid;
  char *fimage, buf[32];
  HDR *head, *tail;
  XO *xt;
  pid_t pid;
#ifdef HAVE_XYNEWS
  int returnPos;
#endif

  if ((max = xo->max) <= 0) /* Thor.980911: 註解: 以防萬一 */
    return XO_FOOT;

  /* build index according to input condition */

  fimage = f_map(xo->dir, &fsize);

  if (fimage == (char *) -1)
  {
    vmsg("目前無法開啟索引檔");
    return XO_FOOT;
  }

  /* allocate index memory, remember free first */

  /* Thor.990113: 怕問title, author的瞬間又有人post */
  max = fsize / sizeof(HDR);
  xlist = xypostI = (int *) malloc(sizeof(int) * max);
  xyshmid = 10000 + cuser.userno;
  ptr = shm_new(xyshmid, sizeof(int) * max);
  cutmp->status |= STATUS_SHM;

  max = 0;
  head = (HDR *) fimage;
  tail = (HDR *) (fimage + fsize);

  if ((pid = fork()) > 0)
  {
    int middle = 0;

    middle = (on + off) / 2;
    if (middle == on)
      middle = on + 1;
    head += on;
    locus = on - 1;
    do
    {
      locus++;
      if (locus > middle)
        break;

#ifdef HAVE_REFUSEMARK
      if (!chkrestrict(head))
        continue;
#endif

      if (!(search_all % 10000) && search_all > 0)
      {
        move(b_lines, 0);
        prints("已經搜尋了 %d 篇文章，要繼續請按任意鍵，要結束請按Esc鍵。"
          , search_all);
        if (igetch() == KEY_ESC)
          break;
      }

      /* check condition */
      if (!(* fchk_1) (head, hdr, 1))
        continue;

      xlist[max++] = locus;
    } while (++head < tail);
  }
  else if (pid == 0)
  {
    int i = 0, middle = 0;

    middle = (on + off) / 2;
    if (middle == on)
      exit(0);

    head += middle + 1;
    locus = middle;
    do
    {
      locus++;
      if (locus > off)
        break;

#ifdef HAVE_REFUSEMARK
      if (!chkrestrict(head))
        continue;
#endif

      /* check condition */
      if (!(* fchk_2) (head, hdr, 2))
        continue;

      *(ptr + i) = locus;
      i++;
    } while (++head < tail);
    exit(0);
  }
  else
  {
    do
    {
      locus++;
      if (locus < on)
        continue;
      else if (locus > off)
        break;

#ifdef HAVE_REFUSEMARK
      if (!chkrestrict(head))
        continue;
#endif

      if (!(search_all % 10000) && search_all > 0)
      {
        move(b_lines, 0);
        prints("已經搜尋了 %d 篇文章，要繼續請按任意鍵，要結束請按Esc鍵。"
          , search_all);
        if (igetch() == KEY_ESC)
          break;
      }

      /* check condition */
      if (!(* fchk_1) (head, hdr, 1))
        continue;

      xlist[max++] = locus;
    } while (++head < tail);
  }
  sleep(1); /* amaki.030912: 父程序小睡片刻，子程序若沒找完就算了 */

  munmap(fimage, fsize);

  while (*ptr != 0 && pid > 0 && max > 0)
  {
    xlist[max++] = *ptr;
    ptr++;
  }

  sprintf(buf, "ipcrm -M %d", xyshmid);

  if (max <= 0)
  {
    free(xlist);
    xypostI = NULL;
    vmsg(MSG_XY_NONE);
    memset(out_hunt, 0, 32);
    memset(out_lunt, 0, 32);
    system(buf);
    cutmp->status ^= STATUS_SHM;
    return XO_FOOT;
  }

  /* build XO for xpost_xo */

  comebackPos = xo->pos;    /* Thor: record pos, future use */
#ifdef HAVE_XYNEWS
  returnPos = comebackPos;
#endif

  xz[XZ_XPOST - XO_ZONE].xo = xt = xo_new(xo->dir);
  xz[XZ_XPOST - XO_ZONE].cb = (xo->dir[0] == 'b') ? xpost_cb : xmbox_cb;
  xt->pos = 0;
  xt->max = max;
  xt->xyz = xo->xyz;
  xt->key = XZ_XPOST;

  xover(XZ_XPOST);

  /* set xo->pos for new location */

#ifdef HAVE_XYNEWS
  if (xz[XZ_NEWS - XO_ZONE].xo)
    xo->pos = returnPos;
    /* 從 XZ_XPOST 回到 XZ_NEWS 游標移去原來的地方 */
  else
#endif
    xo->pos = comebackPos;
    /* 從 XZ_XPOST 回到 XZ_POST 游標移去所選取文章的真正位置 */

  /* free xpost_xo */

  if (xt = xz[XZ_XPOST - XO_ZONE].xo)
  {
    free(xt);
    xz[XZ_XPOST - XO_ZONE].xo = NULL;
  }

  /* free index memory, remember check free pointer */

  if (xlist = xypostI)
  {
    free(xlist);
    xypostI = NULL;
  }

  memset(out_hunt, 0, 32);
  memset(out_lunt, 0, 32);
  system(buf);
  cutmp->status ^= STATUS_SHM;
  return XO_INIT;
}


static int                      /* 0:不滿足條件  !=0:滿足條件 */
filter_full(head, hdr, fchk_num)
  HDR *head;    /* 待測物 */
  HDR *hdr;     /* 條件 */
  int fchk_num; /* 程序編號 */
{
  char fpath[64], *key, *buf;
  int rc, fd, len;
  struct timeval tv = {0, 10};
  struct stat st;

  if (fchk_num == 1 && search_fit < 0)
    return 0;

  hdr_fpath(fpath, search_folder, head);

  if ((fd = open(fpath, O_RDONLY, 0600)) < 0)
    return 0;

  stat(fpath, &st);
  buf = (char *) malloc(st.st_size + 1);

  if (fchk_num == 1)
  {
    if (search_all % 100 == 0)  /* 每 100 篇才 refresh 一次 */
    {
      move(b_lines, 0);
      clrtoeol();
      prints("目前找到 \033[1;33m%d / %d\033[m 篇，全文搜尋中\033[5m...\033[m"
        "按任意鍵中斷", search_fit, search_all);
      refresh();
    }
    search_all++;
  }

  rc = 0;
  key = hdr->title;

  while (len = read(fd, buf, st.st_size))
  {
    buf[len] = '\0';
    if (strstr(buf, key))
    {
      rc = 1;
      if (fchk_num == 1)
        search_fit++;
      break;
    }
    if (len < st.st_size)       /* 已經讀完整個檔 */
      break;
  }

  free(buf);

  close(fd);

  if (fchk_num == 1)
  {
    /* 使用者可以中斷搜尋 */
    fd = 1;
    if (select(1, (fd_set *) &fd, NULL, NULL, &tv) > 0)
    {
      vkey();
      search_fit = -1;
    }
  }

  return rc;
}


int
XoXfull(xo)
  XO *xo;
{
  HDR hdr;
  char *key, ans[8], MSG[40];
  int i = 0, head, tail;

  if (HAS_STATUS(STATUS_COINLOCK))
  {
    vmsg(msg_coinlock);
    return XEASY;
  }

  if (xz[XZ_XPOST - XO_ZONE].xo)        /* itoc.020308: 不得累積進入二次 */
  {
    vmsg(MSG_XYDENY);
    return XO_FOOT;
  }

  /* input condition */

  key = hdr.title;
  if (!vget(b_lines, i, "全文搜尋：", key, 30, DOECHO))
    return XO_FOOT;

  sprintf(xypostHintword, "[全文搜尋] %s", key);
  xypostHintauthor[0] = '\0';

  search_folder = xo->dir;
  search_fit = 0;
  search_all = 0;

  if (vget(b_lines, i, "[設定搜尋範圍] 起點(0=全部搜索)：", ans, 6, DOECHO))
  {
    head = atoi(ans);
    i += 40;
  }
  else
    return XO_FOOT;

  if (head < 0)
  {
    zmsg("起點有誤");
    return XO_FOOT;
  }
  else if (head > xo->max || head == 0)
  {
    head = 1;
    tail = xo->max;
    strcpy(MSG, "要進行全部搜尋，請您確定(Y/N)？[N]");
  }
  else
  {
    vget(b_lines, i, "終點：", ans, 6, DOECHO);
    tail = atoi(ans);
    if (tail < head)
    {
      zmsg("終點有誤");
      return XO_FOOT;
    }
    if (tail > xo->max)
      tail = xo->max;
    strcpy(MSG, msg_sure_ny);
    i += 13;
  }

  head--;
  tail--;

  if (vget(b_lines, i, MSG, ans, 3, LCECHO) == 'y')
  {
    strcpy(out_hunt, key);
    str_lower(out_lunt, out_hunt);
    return XoXpost2(xo, &hdr, head, tail, filter_full, filter_full);
  }
  else
  {
    memset(out_lunt, 0, 32);
    memset(out_hunt, 0, 32);
    return XO_FOOT;
  }
}


: maple/bbsd.c:u_exit()

  int fd, diff;
  char fpath[80], buf[32];
  ACCT tuser;

[1;32;40m+ if (cutmp->status & STATUS_SHM)[m
[1;32;40m+ {[m
[1;32;40m+   sprintf(buf, "ipcrm -M %d", (cutmp->userno + 10000));[m
[1;32;40m+   system(buf);[m
[1;32;40m+ }[m


: maple/bguard.c:ushm_guard()

      if (flop & 15)
      {
#ifdef TIME_KICKER
    if (idle >= IDLE_TIMEOUT)
    {
      errno = 0;

[1;32;40m+     if (uentp->status & STATUS_SHM)[m
[1;32;40m+     {[m
[1;32;40m+       sprintf(buf, "ipcrm -M %d", (uentp->userno + 10000));[m
[1;32;40m+        system(buf);[m
[1;32;40m+     }[m

      if ((kill(pid, SIGTERM) < 0) && (errno == ESRCH))


: maple/bguard.c:ushm_guard()

#ifdef TIME_KICKER
    if (idle >= IDLE_TIMEOUT)
      sig = SIGTERM;
#endif

    if ((kill(pid, sig) < 0) && (errno == ESRCH))
    {
[1;32;40m+     if (uentp->status & STATUS_SHM)[m
[1;32;40m+     {[m
[1;32;40m+       /* FreeBSD 才用 ipcrm -M，Linux 不一樣 */[m
[1;32;40m+       sprintf(buf, "ipcrm -M %d", (uentp->userno + 10000));[m
[1;32;40m+       system(buf);[m
[1;32;40m+     }[m
      uentp->pid = uentp->userno = 0;

--
 [1;41m┌[42m┼[m Or[1mig[30min[m: [41m 彰化師大生物系˙吟風?眺月?擎天崗 [32;47m micro.bio.ncue.edu.tw [m
 [1;43m┼[44m┘[m A[1mut[30mho[mr: [1;33mBioStar [30m從 [35m163.23.212.18 [30m發表[m
