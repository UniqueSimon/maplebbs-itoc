作者: itoc (cygreadline4.dll) 看板: plan
標題: [功能] 點選網址認證
時間: 2004/05/12 Wed 11:14:48                           Updated: 2006/08/06

  點選認證信中的網址就通過認證
  當然，前提是要有掛 bhttpd

: mail.c:bsmtp()

#ifdef EMAIL_JUSTIFY
  char subject[80];
+ char regkey[10];
#endif

  ...
  ...

-   archiv32(str_hash(rcpt, cuser.tvalid), buf);
-   sprintf(title, TAG_VALID " %s(%s) [VALID]", cuser.userid, buf);
+   archiv32(str_hash(rcpt, cuser.tvalid), regkey);
+   sprintf(title, TAG_VALID " %s(%s) [VALID]", cuser.userid, regkey);

  ...
  ...

    if (method & MQ_JUSTIFY)    /* 身分認證信函 */
    {
      fprintf(fw, " ID: %s (%s)  E-mail: %s\r\n\r\n",
        cuser.userid, cuser.username, rcpt);
      [1;44m// 如果 bhttpd 不是開在 port 80，例如是 port 8080，那麼這裡要改成 [m
      [1;44m// http://"MYHOSTNAME":8080/register/%s&%s" [m
+     fprintf(fw, " 您可以直接點選 http://"MYHOSTNAME"/register?%s&%s"
+       "來通過認證\r\n\r\n", cuser.userid, regkey);
    }

: bhttpd.c 一開始的註解

  http://my.domain/query?userid                查詢 userid
+ http://my.domain/register?userid&regkey      線上認證

: bhttpd.c:cmd_table_get[]

  cmd_query,       "query",     5,
+ cmd_register,    "register",  8,

: bhttpd.c 加這一段在 cmd_query() 後面

/*-------------------------------------------------------*/
/* 認證                                                  */
/*-------------------------------------------------------*/


static void
justify_user(userid, email)
  char *userid, *email;
{
  char fpath[64];
  HDR hdr;
  FILE *fp;

  /* 寄認證通過信給使用者 */
  usr_fpath(fpath, userid, FN_DIR);
  if (!hdr_stamp(fpath, HDR_LINK, &hdr, FN_ETC_JUSTIFIED))
  {
    strcpy(hdr.title, "您已經通過身分認證了！");
    strcpy(hdr.owner, STR_SYSOP);
    hdr.xmode = MAIL_NOREPLY;
    rec_add(fpath, &hdr, sizeof(HDR));
  }

  /* 記錄在 FN_JUSTIFY */
  usr_fpath(fpath, userid, FN_JUSTIFY);
  if (fp = fopen(fpath, "a"))
  {
    fprintf(fp, "WEB: %s\n", email);
    fclose(fp);
  }
}


static int
cmd_register(ap)
  Agent *ap;
{
  int fd;
  ACCT acct;
  char fpath[64], *userid, *regkey;
  FILE *fpw = out_head(ap, "認證系統");

  if (!arg_analyze(2, '?', ap->urlp, &userid, &regkey, NULL, NULL))
    return HS_ERROR;

  if (!allow_userid(ap, userid))
    return HS_ERR_USER;

  usr_fpath(fpath, userid, FN_ACCT);
  if ((fd = open(fpath, O_RDONLY)) >= 0)
  {
    read(fd, &acct, sizeof(ACCT));
    if (acct.userlevel & PERM_VALID)
    {
      out_mesg(fpw, "您的認證已經完成，請勿重複認證");
    }
    else
    {
      archiv32(str_hash(acct.email, acct.tvalid), fpath);

      if (str_ncmp(regkey, fpath, 7))
      {
        out_mesg(fpw, "抱歉，您的認證碼錯誤");
      }
      else
      {
        /* 提升權限 */
        time(&(acct.tvalid));
        acct.userlevel |= PERM_VALID;
        lseek(fd, (off_t) 0, SEEK_SET);
        write(fd, &acct, sizeof(ACCT));

        justify_user(userid, acct.email);

        out_mesg(fpw, "恭喜您已經通過認證");
      }
    }
    close(fd);
  }
  else
    return HS_ERR_USER;

  return HS_END;
}

--
[1;37m□ 本文章由 [33mitoc[37m 從 [32mitoc.Dorm11.NCTU.edu.tw[37m 發表[m
