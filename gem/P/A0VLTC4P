Áôº‰ø°‰∫∫: verit.bbs@bbs.yzu.edu.tw (BBS Á´ôÈï∑Â§ßÊúÉ), ÁúãÊùø: installbbs
Ê®ô  È°å: [WindTop]ÂøÉÁêÜÊ∏¨È©óÁ®ãÂºè
Áôº‰ø°Á´ô: ÂÖÉÊô∫Â§ßÂ≠∏È¢®‰πãÂ°î (Tue Sep  9 20:00:52 2003)         Updated: 2003/09/10

: menu.c ÈÅ©Áï∂ÁöÑÈÅ∏ÂñÆÂä†ÂÖ•

  "bin/mind.so:main_mind", 0, - M_XMODE,
  "Mind       ‚ôÇ ÂøÉÁêÜÊ∏¨È©ó ‚ôÄ",

: run/mind

  Âª∫Á´ãÊ≠§ÁõÆÈåÑ

: run/mind/help Êñ∞Â¢ûÊ≠§Ê™îÊ°à

ÂøÉÁêÜÊ∏¨È©óÊäïÁ®øÊ†ºÂºèÊúâ‰∏âÁ®Æ :

1. ‰∏ÄËà¨È°åÁõÆ , Êé•‰∏ã‰∏ÄÈ°å

    [Q]È°åÁõÆ
    [A-1]Ë™™Êòé1
    [A-7]Ë™™Êòé2

    ‰∏äÈù¢Á¨¨‰∫åË°å‰ª£Ë°® , Á¨¨‰∏ÄÂÄãÁ≠îÊ°àÊé•Á¨¨‰∫åÈ°å
    ‰∏äÈù¢Á¨¨‰∏âË°å‰ª£Ë°® , Á¨¨‰∫åÂÄãÊ™îÊ°àÊé•Á¨¨ÂÖ´È°å

2. È°åÁõÆÊé•ÁµêÊûú

    [Q]È°åÁõÆ
    [A-R-1]Ë™™Êòé‰∏Ä
    [A-0]Ë™™Êòé‰∫å

    ‰∏äÈù¢Á¨¨‰∫åË°å‰ª£Ë°® , Á¨¨‰∏ÄÂÄãÁ≠îÊ°àÊé•Á¨¨‰∏ÄÂÄãÁµêÊûú
    ‰∏äÈù¢Á¨¨‰∫åË°å‰ª£Ë°® , Á¨¨‰∫åÂÄãÁ≠îÊ°àÊé•Á¨¨‰∏ÄÈ°å

    ps) Êé•È°åÁõÆÁöÑË©± , È°åËôüË®òÂæóÊ∏õ‰∏Ä
        Êé•ÁµêÊûúÁöÑË©± , Á∑®Ëôü‰∏çÁî®Ê∏õ‰∏Ä

3. ÁµêÊûú

    [R]ÁµêÊûúÊ®ôÈ°å
    ÁµêÊûúÂÖßÂÆπ

    ps) ÁµêÊûúÂÖßÂÆπÂè™ËÉΩ‰∏ÄË°å :p


ÂèØ‰ª•ÂèÉËÄÉ‰∏ãÈù¢ÁöÑÁØÑ‰æã :)
===
[Q]Áõ¥Êé•‰∫ÜÁï∂ÁöÑË™™,Â¶≥ÊòØ?
[A-1]Ê•µÈáçË¶ñÂ§ñË°®
[A-2]ËºÉÈáçË¶ñÂÖßÂú®

[Q]Â∞çÊñºÂñúÊ≠°ÁöÑ‰∫∫ÊÖãÂ∫¶ÂæàÁ©çÊ•µ
[A-3]YES
[A-5]NO

[Q]Â∏∏Â∏∏Â§¢Ë¶ãÂñúÊ≠°ÁöÑ‰∫∫
[A-6]YES
[A-4]NO

[Q]Âú®Ë°ó‰∏äÂ∑ßÈÅáËá™Â∑±ÊöóÊàÄÁöÑ‰∫∫,Â¶≥ÊúÉ
[A-5]ÈÇÄË´ã‰ªñ‰∏ÄÂ°äÂéªÂñùËå∂
[A-14]Âè™ÊâìÊãõÂëº

[Q]‰∏äË™≤(‰∏äÁè≠)ÊôÇ,Â∏∏ÁõØËëóÂñúÊ≠°ÁöÑ‰∫∫Áúã„ÄÇ
[A-7]YES
[A-1]NO

[Q]Â∞çÊñºÂñúÊ≠°ÁöÑ‰∫∫:
[A-8]ÂÖàÂæûÊúãÂèãÂÅöËµ∑
[A=16]ÊØ´‰∏çÁå∂Âú∞Âêë‰ªñÂëäÁôΩ,Ê±∫ÂøÉ‰∏ÄÂÆöË¶ÅÂíå‰ªñÊàêÁÇ∫ÊàÄ‰∫∫„ÄÇ

[Q]ÊàÄ‰∫∫ÊØîÊúãÂèãÈÇÑÈáçË¶Å„ÄÇ
[A-10]YES
[A-4]NO

[Q]‰∏çÊáÇÂæóÈÅ©ÊôÇÂú∞Ë°®ÁôΩ,Âç≥‰ΩøÊòØÁÑ°ËÅäÁöÑÁé©Á¨ë,‰πüÊúÉ‰ΩøÂ¶≥ËáâÁ¥Ö„ÄÇ
[A-11]YES
[A-5]NO

[Q]ÊõæÁ∂ìÂéªÈÅéÂñúÊ≠°ÁöÑ‰∫∫ÂÆ∂Ë£°„ÄÇ
[A-12]YES
[A-9]NO

[Q]ÊöóÊàÄ‰πã‰∫∫Êõæ‰∏ªÂãïËàá‰Ω†Ë™™Ë©±„ÄÇ
[A-18]YES
[A-16]NO

[Q]ÊúâÂæàÂ§öÁï∞ÊÄßÊúãÂèã„ÄÇ
[A-7]YES
[A-11]NO

[Q]ÊöóÊàÄÁöÑ‰∫∫Â¶ÇÊûúÊê¨‰∫ÜÂÆ∂:
[A-8]È¶¨‰∏äÂ∞ãÊâæÂà•ÁöÑÊàÄÊÑõÂ∞çË±°
[A-12]Âç≥‰ΩøÂàÜÈöîÂÖ©Âú∞ÈÇÑÊòØ‰∏ÄÂøÉ‰∏ÄÊÑèÂñúÊ≠°‰ªñ

[Q]Ë®éÂé≠Êï¥Â§©Âú®‰∏ÄËµ∑ÁöÑÊàÄÊÑõ,ÈáçË¶ñÊìÅÊúâÂÄã‰∫∫ÁöÑÊôÇÈñìÂèäÁ©∫Èñì„ÄÇ
[A-20]YES
[A-9]NO

[Q]ÂñúÊ≠°ÁÖßÈ°ßËá™Â∑±ÊöóÊàÄÁöÑ‰∫∫„ÄÇ
[A-R-3]YES
[A-R-1]NO

[Q]ÊÉÖ‰∫∫ÁØÄÊôÇ‰∏çÊï¢Ë¶™ÊâãÈÄÅÁµ¶‰ªñÂ∑ßÂÖãÂäõ„ÄÇ
[A-13]YES
[A-16]NO

[Q]Áï∂Èù¢Âêë‰ªñÂëäÁôΩ,ÊúÉÊÑüÂà∞ÂçÅÂàÜÈõ£ÁÇ∫ÊÉÖ„ÄÇ
[A-R-1]YES
[A-R-2]NO

[Q]‰∏çÂñúÊ≠°Ë¨õÈï∑ÊôÇÈñìÁöÑÈõªË©±„ÄÇ
[A-13]YES
[A-14]NO

[Q]Ëã•ÂèóÂà∞Â£ìÂäõ,‰æøÊúÉÂÇæÂá∫ÂÖ®ÂäõÂèçÊäó„ÄÇ
[A-R-4]YES
[A-R-3]NO

[Q]ÊúâÈÅé(ÊöóÊàÄ)ÂèäË¢´ÂëäÁôΩÁöÑÁ∂ìÈ©ó„ÄÇ
[A-13]YES
[A-20]NO

[Q]‰Ω†Ë¶∫ÂæóÈÇ£‰∏ÄÁ®ÆËºÉÂ•Ω:
[A-R-2]Ë¢´ÂëäÁôΩ
[A-R-4]Âêë‰∫∫ÂëäÁôΩ

[Q]Â∞±ÁÆóÊúâ‰∫∫ÂêëÂ¶≥ÂëäÁôΩ,Â¶ÇÊûú‰∏çÊòØËá™Â∑±ÂñúÊ≠°ÁöÑÈ°ûÂûã,‰æø‰∏çÊúÉËàá‰ªñ‰∫§ÂæÄ„ÄÇ
[A-17]YES
[A-19]NO

[R][ÈÉ≠Èùñ]È°ûÂûãÁöÑ‰∫∫
Â∞çÊñºÂñúÊ≠°ÁÖßÈ°ßÂà•‰∫∫ÁöÑÂ•ΩÂ§ßÂì•ÂΩ¢Ë±°,ÊääÈõ¢ÂÆ∂ËÄåËá™Â∑±ÈóñÊ±üÊπñÁöÑÈªÉËìâÁï∂ÂÅö [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
(ÂèØ‰ø°Ë≥¥ÁöÑ‰∫∫)‰∏¶ÂíåÂ•πÂΩºÊ≠§‰æùË≥¥Áõ∏‰∫íÁÖßÈ°ß,ÊòØÂÄãÊ∫´ÂíåÈ´îË≤ºÁöÑÂ∞çË±°„ÄÇÂæà [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
ÂÆπÊòìËàá‰∫∫Êé•ËøëÈÄôÁ®ÆË¶™ÂäõÊ≠£ÊòØÂ¶≥(‰Ω†)ÁöÑÈ≠ÖÂäõÊâÄÂú®„ÄÇ

[R][ÈÉ≠Ëäô]È°ûÂûãÁöÑ‰∫∫
Âú®ÂñúÊ≠°ÁöÑ‰∫∫Èù¢ÂâçÁ∏ΩÊòØÁÑ°Ê≥ïË°®ÈÅîÂá∫Ëá™Â∑±ÁöÑÊú¨ÊÑè,‰∫ãÂæåÊâçËá™ÊàëÊä±ÊÄ®‰∏çÂ∑≤,[1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
‰∏çÈÅéÂæàÊáÇÂæóÊííÂ¨å„ÄÅËÄçË≥¥„ÄÅ‰πüÂæàÊáÇÂæó‰∏ªÂãïË®é‰∫∫ÂñúÊ≠°„ÄÅËàá‰∫∫ËÅäÂ§©,Âõ†Ê≠§ [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
Áï∞ÊÄßÊúãÂèã‰∏çÂ∞ë,Âè™Ë¶ÅËÉΩÂæûÂ§±Êïó‰∏≠Á¥ØÁ©çÁ∂ìÈ©ó,Ê•µÊúâÂèØËÉΩÊàêÁÇ∫Â§ßÂèóÊ≠°ËøéÁöÑ[1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
‰∫∫„ÄÇ

[R][Â∞èÈæçÂ•≥]È°ûÂûãÁöÑ‰∫∫
ÂÖßÁÜ±Â§ñÂÜ∑,Ê∏ÖÁ¥îÂñÑËâØÂûãÁöÑ‰∫∫:ÂÖ∂ÂØ¶ÊòØÂ±¨ÊñºËºÉËá™Èñâ„ÄÅÂÖßÂêëÁöÑÊÄßÊ†º,‰ΩÜÂ∞ç [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
ÊñºËá™Â∑±ÂñúÊ≠°ÁöÑ‰∫ã„ÄÅÁâ©ÊúÉÂÖ®ÂøÉÂéªÈóúÊ≥®,Èõñ‰∏çÁî®Ë®ÄË™ûÁõ¥Êé•Ë™™Êòé,‰ΩÜÊúÉ‰ª•  [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
Ë°åÂãï‰∏çÁ∂ìÊÑèÂú∞ÊµÅÈú≤ÊÑõÊÑè,Âú®ÂÖßÂøÉÁöÑÊæéÊπÉÁÜ±ÊÉÖ‰πã‰∏≠ÈÇÑÊòØÂ∏∂ÈªûÊ≤âÁ©©,Âíå  [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
ÈÄôÈ°ûÂûãÁöÑÂú®‰∏ÄËµ∑ÊáâË©≤ÊúÉÊÑüÂà∞ÂÆâÂøÉËá™Âú®„ÄÇ

[R][Ê•äÈÅé]È°ûÂûãÁöÑ‰∫∫
Âõ†ÁÇ∫ÂÄãÊÄßÂü∑Ëëó,Â∞çËá™Â∑±ÂøÉÂÑÄÁöÑ‰∫∫ÊúÉÂä™ÂäõÁöÑÂÆàÂÄôÂú®Â•π(‰ªñ)Ë∫´ÊóÅ,ÊúâÊôÇ  [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
ÂèØËÉΩÊúÉ‰∏çÊï¢ÊòéÊòéÁôΩÁôΩ‰ΩúÂá∫ÊÑõÁöÑÂëäÁôΩ,‰ΩÜÂ∞àÊÉÖÁöÑÂ•π(‰ªñ),Ëã•ÈÅáÂà∞ÊàÄ‰∫∫  [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
ÁöÑËÉåÂèõ,‰ªñÂøÖÊúÉ‰ΩøÁõ°ÂÖ®ÂäõÂéªÊåΩÂõû,ÊòØÂèóÂ£ìÂäõÊÑàÂ§ßÂèçÂΩàÊÑàÂ§ß,Ê∞∏ÈÅ†‰∏çÊúç [1;36m(ÁÑ°Êñ∑Ë°åÊåâ‰∏ãË°å)[m
Ëº∏ÁöÑ‰∫∫„ÄÇ

: src/so/Makeifle

SO =    .... [1;33mmind.so[m

: src/so/mind.c Êñ∞Â¢ûÊ≠§Á®ãÂºè

/*-------------------------------------------------------*/
/* mind.c        ( YZU_CSE WindTop BBS )                 */
/*-------------------------------------------------------*/
/* author : verit.bbs@bbs.yzu.edu.tw                     */
/* target : ÂøÉÁêÜÊ∏¨È©ó                                     */
/* create : 03/08/05                                     */
/* update :   /  /                                       */
/*-------------------------------------------------------*/


#include "bbs.h"


#define MAX_DESC_LENGTH      256        /* ÊïòËø∞ÁöÑÈï∑Â∫¶ */
#define MAX_TEXT_LENGTH      512        /* ÂÖßÊñáÁöÑÈï∑Â∫¶ */

#define MAX_MIND_QUESTION    50         /* ÊúÄÂ§öÈ°åÁõÆÂÄãÊï∏ */
#define MAX_MIND_ANSWER      5          /* ÊØèÈ°åÊúÄÂ§öÁ≠îÊ°àÊï∏ */
#define MAX_MIND_RESULT      10         /* ÊúÄÂ§öÁµêÊûúÊï∏ */

#define LEN                  50         /* ‰∏ÄË°åÊúÄÂ§öÈ°ØÁ§∫ÂπæÂÄãÂ≠ó */
#define MIND_XPOS            5          /* È†êË®≠Ëº∏Âá∫ x Â∫ßÊ®ô */
#define MIND_YPOS            10         /* È†êË®≠Ëº∏Âá∫ y Â∫ßÊ®ô */

#define DEF_PATH        "run/mind/"

static int x, y;

typedef struct
{
  char question[MAX_DESC_LENGTH];
  char ans_desc[MAX_MIND_ANSWER][MAX_DESC_LENGTH];
  int ans_next[MAX_MIND_ANSWER];
  int ans;
}      QUESTION;

typedef struct
{
  char title[MAX_DESC_LENGTH];
  char desc[MAX_TEXT_LENGTH];
}      RESULT;

typedef struct
{
  QUESTION question[MAX_MIND_QUESTION];
  RESULT result[MAX_MIND_RESULT];
  int qcount;
  int rcount;
}      MIND;


static int
read_file(fpath, m)
  char *fpath;
  MIND *m;
{
  FILE *fp;
  int num;
  int ans;
  int result;
  char buf[MAX_TEXT_LENGTH];
  char *tmp, *tmp2;
  if (!(fp = fopen(fpath, "r")))
    return -1;

  num = -1;
  result = 0;
  while (fgets(buf, sizeof(buf), fp))
  {
    if (buf[1] == 'Q')
    {
      if (num >= 0)
        m->question[num].ans = ans;
      if (++num >= MAX_MIND_QUESTION)
      {
        fclose(fp);
        return -2;
      }
      strcpy(m->question[num].question, buf + 3);
      if (tmp2 = strchr(m->question[num].question, '\n'))
        *tmp2 = 0;
      ans = 0;
    }
    else if (buf[1] == 'A')
    {
      tmp = strchr(buf, ']');
      *tmp = 0;

      if (buf[3] == 'R')
        m->question[num].ans_next[ans] = atoi(buf + 4);
      else
        m->question[num].ans_next[ans] = atoi(buf + 3);

      strcpy(m->question[num].ans_desc[ans], tmp + 1);
      if (tmp2 = strchr(m->question[num].ans_desc[ans], '\n'))
        *tmp2 = 0;
      ++ans;
    }
    else if (buf[1] == 'R')
    {
      m->question[num].ans = ans;

      strcpy(m->result[result].title, buf + 3);
      if (tmp2 = strchr(m->result[result].title, '\n'))
        *tmp2 = 0;

      if (fgets(buf, sizeof(buf), fp))
        strcpy(m->result[result].desc, buf);
      else
        memset(m->result[result].desc, 0, MAX_TEXT_LENGTH);

      if (tmp2 = strchr(m->result[result].desc, '\n'))
        *tmp2 = 0;
      if (++result >= MAX_MIND_RESULT)
        break;
    }
  }

  m->qcount = num + 1;
  m->rcount = result;

  fclose(fp);

  return 1;
}


static int
print_quiz(src)
  char *src;
{
  int wstate = 0;
  int word = 0;
  char *str = src;
  char buf[128], *tmp;
  char form[128];
  int pos = LEN + 1;
  int height = 0;

  sprintf(form, "%%-%ds", pos + 1);

  while (*str)
  {
    height++;
    tmp = str;
    move(x++, y);
    outs(" \033[0;37m‚ñè\033[1;37m");

    wstate = 0;
    word = 0;
    for (; word < pos && *str; str++)
    {
      wstate = (*str < 0) ? ((wstate == 1) ? 0 : 1) : 0;
      word++;
    }

    if (!(*str < 0 && wstate == 0))
      str++;

    memset(buf, 0, sizeof(buf));
    strncpy(buf, tmp, str - tmp);
    prints(form, buf);
    if (strlen(buf) == pos)
      outs("\033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m ");
    else
      outs("\033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m ");
  }

  return height;
}


static int
draw_item(src, pos, mode)
  char *src;
  int pos;
  int mode;
{
  char buf[128];

  sprintf(buf, "%%d;37m %s %%-%ds", (mode) ? "‚óÜ" : "  ", LEN - 2);
  move(MIND_XPOS + pos + 2, MIND_YPOS);

  outs(" \033[0;37m‚ñè\033[1;");
  prints(buf, (mode) ? 41 : 40, src);
  outs("\033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m ");
}


static int
draw_menu(question, no)
  QUESTION *question;
  int no;
{
  int i, cur;
  int c;
  int h;

  x = MIND_XPOS;
  y = MIND_YPOS;

  move(x++, y);
  outs(" \033[0;40;37m????????????????????????????\033[m");
  move(x++, y);
  prints(" \033[0;37;44m‚ñè\033[1mÁ¨¨ %02d È°å%-43s \033[0;47;34m‚ñâ\033[m", no + 1, " ");
  move(x++, y);
  prints(" \033[0;37m‚ñè\033[1m%-51s \033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m", " ");
  cur = 0;
  h = print_quiz(question[no].question) + 2;

  move(x++, y);
  prints(" \033[0;37m‚ñè\033[1m%-51s \033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m", " ");

  for (i = 0; i < question[no].ans; ++i, ++x)
    draw_item(question[no].ans_desc[i], i + h, (i == cur) ? 1 : 0);

  move(x++, y);
  prints(" \033[0;37m‚ñè\033[1m%-51s \033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m", " ");
  move(x++, y);
  outs(" \033[0;47;30m‚ñá\033[30;1m‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá\033[40;30;1m‚ñâ\033[m");

  outz("\033[1;37;42m „ÄêÊìç‰ΩúË™™Êòé„Äëq)Èõ¢Èñã Enter)‰ΩúÁ≠î                                                \033[m");

  while (c = vkey())
  {
    draw_item(question[no].ans_desc[cur], cur + h, 0);
    switch (c)
    {
    case KEY_UP:
      cur = (cur == 0) ? question[no].ans - 1 : cur - 1;
      break;
    case KEY_DOWN:
      cur = (cur + 1) % question[no].ans;
      break;
    case '\n':
    case ' ':
      return cur;
    case 'q':
      vmsg(NULL);
      return -892226;
    }
    draw_item(question[no].ans_desc[cur], cur + h, 1);
  }

  return 0;
}


static void
do_test(fpath, title)
  char *fpath;
  char *title;
{
  int no, ans;
  MIND m;

  if (read_file(fpath, &m) <= 0)
    return;

  no = 0;
  while (1)
  {
    vs_bar("ÂøÉÁêÜÊ∏¨È©ó");
    move(3, MIND_YPOS);
    prints("ÁõÆÂâçÊ∏¨È©óÁöÑÈ°åÁõÆÊòØ : %s", title);
    ans = draw_menu(m.question, no);
    if (ans == -892226)
      return;
    no = m.question[no].ans_next[ans];
    if (no < 0)
    {
      x = MIND_XPOS;
      y = MIND_YPOS;
      no = -no;
      --no;

      vs_bar("ÂøÉÁêÜÊ∏¨È©ó");
      move(x++, y);
      prints(" \033[0;40;37m????????????????????????????\033[m   ");
      move(x++, y);
      prints(" \033[0;37;42m‚ñè\033[1mÁµêÊûúÔºö%-45s \033[0;47;32m‚ñâ\033[m   ", m.result[no].title);
      move(x++, y);
      prints(" \033[0;37m‚ñè\033[1m%-51s \033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m ", " ");

      print_quiz(m.result[no].desc);

      move(x++, y);
      prints(" \033[0;37m‚ñè\033[1m%-51s \033[0;47;30m‚ñâ\033[40;30;1m‚ñâ\033[m ", " ");
      move(x++, y);
      prints(" \033[0;47;30m‚ñá\033[30;1m‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá\033[40;30;1m‚ñâ\033[m ");
      vmsg(NULL);
      break;
    }
  }
}


/*-------------------------------------------------------*/
/* xover ÈÅ∏ÂñÆ                                            */
/*-------------------------------------------------------*/

extern XZ xz[];
extern char xo_pool[];

static int mind_add();

typedef struct
{
  char title[56];
  char fpath[8];
}      XMIND;


static void
mind_item(num, mind)
  int num;
  XMIND *mind;
{
  prints("%6d     %-64s\n", num, mind->title);
}


static int
mind_body(xo)
  XO *xo;
{
  XMIND *mind;
  int num, max, tail;

  move(3, 0);
  clrtobot();
  max = xo->max;
  if (max <= 0)
  {
    if (vans("Ë¶ÅÊñ∞Â¢ûË≥áÊñôÂóé(Y/N)Ôºü[N] ") == 'y')
      return mind_add(xo);
    return XO_QUIT;
  }

  mind = (XMIND *) xo_pool;
  num = xo->top;
  tail = num + XO_TALL;
  if (max > tail)
    max = tail;

  do
  {
    mind_item(++num, mind++);
  } while (num < max);

  return XO_FOOT;
}


static int
mind_head(xo)
  XO *xo;
{
  vs_head("ÂøÉÁêÜÊ∏¨È©ó", str_site);
  outs("[‚Üê]Èõ¢Èñã [Enter]Ê∏¨È©ó [q]ÁÄèË¶Ω [^P]Êñ∞Â¢û [c]‰øÆÊîπ [d]Âà™Èô§ [h]ÊäïÁ®øÊ†ºÂºè\n"
    "\033[30;47m  Á∑®Ëôü     Ê∏¨  È©ó  Âêç  Á®±                                                     \033[m");
  return mind_body(xo);
}


static int
mind_load(xo)
  XO *xo;
{
  xo_load(xo, sizeof(XMIND));
  return mind_body(xo);
}


static int
mind_init(xo)
  XO *xo;
{
  xo_load(xo, sizeof(XMIND));
  return mind_head(xo);
}


static int      /* 1:Êñ∞Â¢û/‰øÆÊîπ  0:ÂèñÊ∂à */
mind_edit(mind, echo)
  XMIND *mind;
  int echo;
{
  char fpath[64];

  if (echo == DOECHO)
  {
    time_t t = time(0);
    memset(mind, 0, sizeof(XMIND));
    archiv32(t, mind->fpath);
  }

  if (vget(b_lines, 0, "ÂêçÁ®±Ôºö", mind->title, sizeof(mind->title), echo))
  {
    sprintf(fpath, "%s%s", DEF_PATH, mind->fpath);
    if (!vedit(fpath, 0))
      return 1;
    vmsg(echo == DOECHO ? "ÂèñÊ∂àÊñ∞Â¢û" : "ÂèñÊ∂à‰øÆÊîπ");
  }

  return 0;
}


static int
mind_add(xo)
  XO *xo;
{
  XMIND mind;

  if (!HAS_PERM(PERM_SYSOP))
    return XO_NONE;

  if (mind_edit(&mind, DOECHO))
  {
    rec_add(xo->dir, &mind, sizeof(XMIND));
    xo->pos = XO_TAIL;
    xo_load(xo, sizeof(XMIND));
  }
  return mind_head(xo);
}


static int
mind_delete(xo)
  XO *xo;
{
  if (!HAS_PERM(PERM_SYSOP))
    return XO_NONE;

  if (vans(msg_del_ny) == 'y')
  {
    if (!rec_del(xo->dir, sizeof(XMIND), xo->pos, NULL))
      return mind_load(xo);
  }
  return XO_FOOT;
}


static int
mind_change(xo)
  XO *xo;
{
  XMIND *mind, mate;
  int pos, cur;

  if (!HAS_PERM(PERM_SYSOP))
    return XO_NONE;

  pos = xo->pos;
  cur = pos - xo->top;
  mind = (XMIND *) xo_pool + cur;

  mate = *mind;
  mind_edit(mind, GCARRY);
  if (memcmp(mind, &mate, sizeof(XMIND)))
  {
    rec_put(xo->dir, mind, sizeof(XMIND), pos, NULL);
    move(3 + cur, 0);
    mind_item(++pos, mind);
  }

  return mind_init(xo);
}


static int
mind_browser(xo)
  XO *xo;
{
  XMIND *mind;
  int pos, cur;
  char fpath[64];

  if (!HAS_PERM(PERM_SYSOP))
    return XO_NONE;

  pos = xo->pos;
  cur = pos - xo->top;
  mind = (XMIND *) xo_pool + cur;
  sprintf(fpath, "%s%s", DEF_PATH, mind->fpath);
  more(fpath, NULL);
  return mind_init(xo);
}


static int
mind_do(xo)
  XO *xo;
{
  XMIND *mind;
  int pos, cur;
  char fpath[64];

  pos = xo->pos;
  cur = pos - xo->top;
  mind = (XMIND *) xo_pool + cur;
  sprintf(fpath, "%s%s", DEF_PATH, mind->fpath);
  do_test(fpath, mind->title);

  return mind_init(xo);
}


static int
mind_help(xo)
  XO *xo;
{
  char fpath[64];

  sprintf(fpath, "%shelp", DEF_PATH);
  more(fpath, NULL);
  return mind_head(xo);
}


static KeyFunc mind_cb[] =
{
  XO_INIT, mind_init,
  XO_LOAD, mind_load,
  XO_HEAD, mind_head,
  XO_BODY, mind_body,

  Ctrl('P'), mind_add,
  'r', mind_do,
  'q', mind_browser,
  'c', mind_change,
  'd', mind_delete,
  'h', mind_help
};


int
main_mind()
{
  XO *xo;
  char fpath[64];

  /* ÂÄüÁî® XZ_PALÔºåÊâÄ‰ª• feeter ÊúÉ‰∏çÂ∞çÔºåÊ≤íÂ∑Æ :p */
  sprintf(fpath, "%sindex", DEF_PATH);
  xz[XZ_PAL - XO_ZONE].xo = xo = xo_new(fpath);
  xz[XZ_PAL - XO_ZONE].cb = mind_cb;
  xover(XZ_PAL);
  free(xo);

  return 0;
}

--
[1;32m‚Äª Origin: [33mÂÖÉÊô∫Â§ßÂ≠∏ È¢®‰πãÂ°î [37m<bbs.yzu.edu.tw> [m
[1;32m‚Äª From  : [36mbbs.yzu.edu.tw[m
