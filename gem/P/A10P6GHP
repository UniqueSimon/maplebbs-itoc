作者: itoc (站上人數：802) 站內: plan
標題: [功能] HDR 新增一個欄位給已讀未讀輔助判斷
時間: 2004/11/11 Thu 17:46:58                           Updated: 2007/03/06

  在 struct HDR 新增一個欄位 stamp
  stamp 也是 unique 的，且和 chrono 不能重覆
  (若檔案沒有被更改過，那麼 stamp 就是 0)

  在看板中 chrono/stamp 的順序將不再按照篇數遞增

  目的是希望在 推文/改文 時
  在文章列表會出現 +
  在看板列表也會出現未讀燈 (即使沒有新文章，只有新推文)

  ─────────────────────────────────────

  [範例]

  某看板的 .DIR 記錄如下：

     第幾篇  chrono  stamp
       1      100      0
       2      200     301
       3      300      0
       4      400      0

  判斷第 1 篇是否已讀時，去查看閱讀記錄裡面是否有 100
  判斷第 2 篇是否已讀時，去查看閱讀記錄裡面是否有 301

  當閱讀第 1 篇完，會將 100 寫回閱讀記錄
  當閱讀第 2 篇完，會將 301 寫回閱讀記錄

  若整個看板都讀完，那麼在閱讀記錄裡面有 100 300 301 400

  ─────────────────────────────────────

  還有，改這個功能要付出的代價包括：

  1. 因為要得到 unique stamp
     所以每一次 推文/改文 (更動stamp) 都會多產生一個檔案
     (直到 expire.c 的 sync 才會被清除)

  2. 因為在看板中 BMAX(chrono,stamp) 的順序將不再按照篇數遞增，
     所以每一篇儲存閱讀記錄都要去掃一次 .DIR

  ─────────────────────────────────────

: hdr.h:struct HDR

- char owner[80];               /* 作者 (E-mail address) */
+ char owner[76];               /* 作者 (E-mail address) */
+ time_t stamp;                 /* 最近一次更改檔案的時間 */
  char nick[49];                /* 暱稱 */

: post.c:post_attr()

  將 !brh_unread(hdr->chrono)
  取代成 !brh_unread(BMAX(hdr->chrono, hdr->stamp))
  共有二處

: xover.c:xo_get_post()

  XO *xo;
- time_t chrono;
+ HDR hdr;
  int fd;

  ...

-   if (read(fd, &chrono, sizeof(time_t)) == sizeof(time_t))
+   if (read(fd, &hdr, sizeof(HDR)) == sizeof(HDR))
    {
-     if (brh_unread(chrono))
+     if (brh_unread(BMAX(hdr.chrono, hdr.stamp)))
        pos = mid;

  ...

-   if (read(fd, &chrono, sizeof(time_t)) == sizeof(time_t))
+   if (read(fd, &hdr, sizeof(HDR)) == sizeof(HDR))
    {
-     if (brh_unread(chrono))
+     if (brh_unread(BMAX(hdr.chrono, hdr.stamp)))
        pos = 0;

: xover.c:xo_thread()

- #define UNREAD_FUNC()  \
-     (op & RS_BOARD ? brh_unread(hdr->chrono) : !(hdr->xmode & MAIL_READ))
+ #define UNREAD_FUNC()  \
+     (op & RS_BOARD ? brh_unread(BMAX(hdr->chrono, hdr->stamp)) : \
+     !(hdr->xmode & MAIL_READ))

: post.c:do_post()

- HDR hdr, buf;
+ HDR hdr;
  char fpath[64], *folder, *nick, *rcpt;
  int mode;
- time_t spendtime, prev, chrono;
+ time_t spendtime;

  ...
  ...

- #if 1
- chrono = hdr.chrono;

- if ((mode = rec_num(folder, sizeof(HDR))) > 1)
- {
-   mode -= 2;
-   if (!rec_get(folder, &buf, sizeof(HDR), mode))
-     prev = buf.chrono;
-   else
-     prev = chrono;
- }
- else
- {
-   prev = chrono;
- }

- brh_add(prev, chrono, chrono);
- #endif
+ post_history(xo, &hdr);

: xpost.c:xpost_history()

  此函式整個刪除

: xpost.c:xpost_browse()

-   xpost_history(xo, hdr);
+   post_history(xo, hdr);

: maple.p

+ void post_history(XO *xo, HDR *hdr);

: post.c:post_history() 改成這樣

void
post_history(xo, hdr)          /* 將 hdr 這篇加入 brh */
  XO *xo;
  HDR *hdr;
{
  int fd;
  time_t prev, chrono, next, this;
  HDR buf;

  chrono = BMAX(hdr->chrono, hdr->stamp);
  if (!brh_unread(chrono))      /* 如果已在 brh 中，就無需動作 */
    return;

  if ((fd = open(xo->dir, O_RDONLY)) >= 0)
  {
    prev = chrono + 1;
    next = chrono - 1;

    while (read(fd, &buf, sizeof(HDR)) == sizeof(HDR))
    {
      this = BMAX(buf.chrono, buf.stamp);

      if (chrono - this < chrono - prev)
        prev = this;
      else if (this - chrono < next - chrono)
        next = this;
    }
    close(fd);

    if (prev > chrono)      /* 沒有下一篇 */
      prev = chrono;
    if (next < chrono)      /* 沒有上一篇 */
      next = chrono;

    brh_add(prev, chrono, next);
  }
}

: post.c:change_stamp() 新增函式在 cmpchrono() 後面

static void
change_stamp(folder, hdr)
  char *folder;
  HDR *hdr;
{
  HDR buf;

  /* 為了確定新造出來的 stamp 也是 unique (不和既有的 chrono 重覆)，
     就產生一個新的檔案，該檔案隨便 link 即可。
     這個多產生出來的垃圾會在 expire 被 sync 掉 (因為不在 .DIR 中) */
  hdr_stamp(folder, HDR_LINK | 'A', &buf, "etc/stamp");
  hdr->stamp = buf.chrono;
}

: etc/stamp 新增一個檔案

  內容隨便打

: board.c:btime_refresh()

    struct stat st;
+   time_t maxchrono;

  ...
  ...

#ifdef ENHANCED_BSHM_UPDATE
        HDR hdr;

        brd->bpost = fsize / sizeof(HDR);
        /* itoc.020829: 找最後一篇未被加密的 HDR */
-       while ((fsize -= sizeof(HDR)) >= 0)
+       maxchrono = 0;
+       while (read(fd, &hdr, sizeof(HDR)) == sizeof(HDR))
        {
-         lseek(fd, fsize, SEEK_SET);
-         read(fd, &hdr, sizeof(HDR));
          if (!(hdr.xmode & POST_RESTRICT))
-           break;
+         {
+           maxchrono = BMAX(maxchrono, hdr.chrono);
+           maxchrono = BMAX(maxchrono, hdr.stamp);
+         }
        }
-       brd->blast = hdr.chrono;
+       brd->blast = maxchrono;
#else

--
  拼 I/O 啊

--
[1;37m□ 本文章由 [33mitoc[37m 從 [32mitoc.Dorm11.NCTU.edu.tw[37m 發表[m
