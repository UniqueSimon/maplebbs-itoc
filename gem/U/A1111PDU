發信人: TKyo.bbs@cpu.tfcis.org (暗黑貴公子) 看板: plan
標  題: Re: [問題]文章類別
發信站: 動力核心 (2005/01/25 Tue 16:54:09)                Updated: 2006/04/17

※ 引述《wim888.bbs@wim888.twbbs.org (888)》之銘言：
> 在POST文章時會先問要不要加上文章類別
> 目前是要就全站都用要不然就是都不用
> 能不能改成讓每個版分開去決定
> 每個版可以設定自己的文章有哪些類別

呵, 剛好我站上有這功能, 寫好一個禮拜多了, 就 Post 出來給大家參考吧 :)

------------------------------------------------------------------------------
: src/include/modes.h : 假設 XO_ZONE 最後為精華區, 需跟 xz[] 同步

  #define XZ_GEM          (XO_ZONE + 13)          /* 精華區 */
+ #define XZ_PREFIX       (XO_ZONE + 14)          /* 文章類別定義檔 */

: src/include/battr.h : 假設看板屬性最後是 BRD_NOSCORE

  #define BRD_NOSCORE   0x40    /* 不評分看板 */
+ #define BRD_PREFIX    0x80    /* 使用文章類別 */

- #define NUMBATTRS 7
+ #define NUMBATTRS 8

- #define STR_BATTR "zTcsvA%"         /* itoc: 新增旗標的時候別忘了改這裡啊 */
+ #define STR_BATTR "zTcsvA%p"        /* itoc: 新增旗標的時候別忘了改這裡啊 */

#ifdef _ADMIN_C_
  static char *battr_tbl[NUMBATTRS] =
  {
    .
    .
    .
  "不評分看板",         /* BRD_NOSCORE */
+ "使用文章類別"        /* BRD_PREFIX */
};
#endif

: src/include/struct.h : 適當位置加入

+ #define FN_PREFIX       "prefix.dat"            /* 文章類別定義檔 */
+ typedef struct
+ {
+   time_t stamp;                 /* 編號 */
+   usint xmode;                  /* 文章類別模式 */
+   char title[11];               /* 文章類別標題 */
+ }       PREFIX;

: src/include/theme.h : 適當位置加入

#define NECKER_PREFIX  "[←]離開 [T]修改類別 [E]修改 [m]移動 [t]標籤 [d/D]刪除 [^D]標籤刪除 [h]說明\n" \
COLOR3 "  編號   文章類別    屬性%*s                                                     \033[m"

#define FEETER_PREFIX   \
COLOR1 " 類別管理 " COLOR2 " (ENTER)切換屬性 (a)新增 (E)修改 (↑/↓)上下 (PgUp/PgDn)上下頁      "

: src/maple/xover.c : xz[]

- {NULL, NULL, M_GEM, FEETER_GEM}               /* XZ_GEM */
+ {NULL, NULL, M_GEM, FEETER_GEM},              /* XZ_GEM */
+ {NULL, NULL, M_XMODE, FEETER_PREFIX}          /* XZ_PREFIX */

: src/so/manage.c : post_manage()

  char *menu[] =
  {
    .
    .
    .
+   "Prefix  編輯文章類別"
     NULL
  };

  case 'o':
    ret = XoBM(xo);
    break;
#endif

  case 'p':
+   {
+     void *p;
+     int (*func) ();

+     p = DL_get("bin/prefix.so:XoPrefix");

+     if (p)
+     {
+       func = p;
+       ret = (*(func)) (xo);
+     }
+     else
+       ret = XO_FOOT;

+      break;
+   }


: src/maple/post.c

/* 適當位置加入一 function post_prefix() */

static char *
post_prefix()
{
  char *menu[13], fpath[64];
  PREFIX prefix;
  static char buf[10][14];
  char buf_title[50];
  int ch, i, j, num, page, page_max, page_size;

  if (currbattr & BRD_PREFIX)
  {
    brd_fpath(fpath, currboard, FN_PREFIX);
    if ((num = rec_num(fpath, sizeof(PREFIX))) > 0)
    {
      page_size = 9;
      page_max = ((num - 1) / page_size) + 1;
      page = 0;
      menu[0] = "QP";

      for (;;)
      {
        i = page * page_size;
        for (j = 0; j <= page_size; i++, j++)
        {
          if (!(rec_get(fpath, &prefix, sizeof(PREFIX), i)))
          {
            if (prefix.xmode && (!(bbstate & STAT_BOARD)))
              strcpy(buf[j], "#  板主御用");
            else
              sprintf(buf[j], "%d  %s", (j + 1), prefix.title);

            menu[j + 1] = buf[j];
          }
          else
          {
            j++;
            break;
          }
        }

        menu[j] = "Q  取消";
        menu[j + 1] = NULL;

        sprintf(buf_title, "選擇文章類別  (←) 換頁║%c║", page + '1');
        ch = pans(-1, -1, buf_title, menu);
        if (ch == 'q')
          break;
        else if (ch == 'p')
        {
          page++;
          if (page == page_max)
            page = 0;
        }
        else if (ch == '#')
          vmsg("無法使用此文章類別\n因為您不是該板板主，請重新選擇文章類別！");
        else
          return buf[ch - '1'] + 3;
      }
    }
  }
  return NULL;
}

: src/maple/post.c : do_post()

  prints("發表文章於【 %s 】看板", currboard);

#ifdef POST_PREFIX
  .
  .
  .
#else
- if (!ve_subject(21, title, NULL))
+ if (!ve_subject(22, title, ((title) ? NULL : post_prefix())))
#endif
    return XO_HEAD;

: src/so/prefix.c 新增這隻程式

/*-------------------------------------------------------*/
/* prefix.c         ( NTHU CS MapleBBS Ver 3.10 )        */
/*-------------------------------------------------------*/
/* target : Post Refix 管理介面程式                      */
/* author : kyo.bbs@cszone.org                           */
/* create : 05/01/17                                     */
/* update :   /  /                                       */
/*-------------------------------------------------------*/


#include "bbs.h"


extern XZ xz[];
extern char xo_pool[];

#define PREFIX_MANAGER  0x01

#define C_PREFIX_MANAGER        "\033[1;31m"
#define C_PREFIX_USER           "\033[1;37m"

static int
prefix_edit(prefix, echo)
  PREFIX *prefix;
  int echo;
{
  char buf_command[3] = {0};
  char *menu[] = {buf_command,
      "1  一般使用者",
      "2  板主專用", NULL};

  strcpy(buf_command, "11");

  if (echo == GCARRY)
  {
    if (prefix->xmode & PREFIX_MANAGER)
      strcpy(buf_command, "22");
  }

  switch(pans(-1, -1, "類別使用權限", menu))
  {
    case '1':
      prefix->xmode = 0;
      break;
    case '2':
      prefix->xmode = PREFIX_MANAGER;
      break;
  }

  if (!(vget(b_lines, 0, "文章類別：", prefix->title, 11, echo)))
    return 0;

  return 1;
}

static int
prefix_add(xo)
  XO *xo;
{
  PREFIX prefix;

  memset(&prefix, 0, sizeof(PREFIX));

  if (prefix_edit(&prefix, DOECHO))
  {
    char fpath[64];

    time(&prefix.stamp);
    brd_fpath(fpath, currboard, FN_PREFIX);
    rec_add(fpath, &prefix, sizeof(PREFIX));
  }

  return XO_INIT;
}

static int
prefix_change(xo)
  XO *xo;
{
  PREFIX *prefix, old_prefix;
  int pos, cur;

  pos = xo->pos;
  cur = pos - xo->top;
  prefix = (PREFIX *) xo_pool + cur;

  old_prefix = *prefix;

  if (prefix_edit(&old_prefix, GCARRY))
  {
    if (memcmp(prefix, &old_prefix, sizeof(PREFIX)))
    {
      if (vans("確定要修改嗎？[N] ") == 'y')
      {
        char fpath[64];

        brd_fpath(fpath, currboard, FN_PREFIX);
        rec_put(fpath, &old_prefix, sizeof(PREFIX), pos, NULL);
        return XO_INIT;
      }
    }
  }

  return XO_HEAD;
}

static int
prefix_title(xo)
  XO *xo;
{
  PREFIX *prefix, old_prefix;
  int pos, cur;

  pos = xo->pos;
  cur = pos - xo->top;
  prefix = (PREFIX *) xo_pool + cur;

  old_prefix = *prefix;

  if (vget(b_lines, 0, "文章類別：", prefix->title, 11, GCARRY))
  {
    if (memcmp(prefix, &old_prefix, sizeof(PREFIX)))
    {
      char fpath[64];

      brd_fpath(fpath, currboard, FN_PREFIX);
      rec_put(fpath, prefix, sizeof(PREFIX), pos, NULL);
      return XO_LOAD;
    }
  }

  return XO_FOOT;
}

prefix_delete(xo)
  XO *xo;
{
  if (vans(msg_del_ny) == 'y')
  {
    if (!rec_del(xo->dir, sizeof(PREFIX), xo->pos, NULL))
    {
      PREFIX *prefix;
      prefix = (PREFIX *) xo_pool + (xo->pos - xo->top);
      return XO_LOAD;
    }
  }
  return XO_FOOT;
}

static int
prefix_rangedel(xo)
  XO *xo;
{
  return xo_rangedel(xo, sizeof(PREFIX), NULL, NULL);
}

static int
vfyprefix(prefix, pos)
  PREFIX *prefix;
  int pos;
{
  return Tagger(prefix->stamp, pos, TAG_NIN);
}

static int
prefix_prune(xo)
  XO *xo;
{
  return xo_prune(xo, sizeof(PREFIX), vfyprefix, NULL);
}

static void
prefix_item(num, prefix)
  int num;
  PREFIX *prefix;
{
  prints("%6d  %c%-10s  %s%s\033[m\n",
    num, tag_char(prefix->stamp),
    prefix->title,
    (prefix->xmode & PREFIX_MANAGER) ? C_PREFIX_MANAGER : C_PREFIX_USER,
    (prefix->xmode & PREFIX_MANAGER) ? "板主專用" : "一般使用者");
}

static int
prefix_query(xo)
  XO *xo;
{
  PREFIX *prefix;
  int pos, cur;
  char fpath[64];

  pos = xo->pos;
  cur = pos - xo->top;
  prefix = (PREFIX *) xo_pool + cur;

  prefix->xmode ^= PREFIX_MANAGER;
  brd_fpath(fpath, currboard, FN_PREFIX);
  rec_put(fpath, prefix, sizeof(PREFIX), pos, NULL);

  move(3 + cur, 0);
  prefix_item(++pos, prefix);

  return XO_NONE;
}

static int
prefix_body(xo)
  XO *xo;
{
  PREFIX *prefix;
  int max, num, tail;

  max = xo->max;
  if (max <= 0)
  {
    if (vans("新增文章類別資料？[N] ") == 'y')
      return prefix_add(xo);

    return XO_QUIT;
  }

  prefix = (PREFIX *) xo_pool;
  num = xo->top;
  tail = num + XO_TALL;
  if (max > tail)
    max = tail;

  move(3, 0);
  do
  {
    prefix_item(++num, prefix++);
  } while (num < max);
  clrtobot();

  return XO_FOOT;       /* itoc.010403: 把 b_lines 填上 feeter */
}

static int
prefix_head(xo)
  XO *xo;
{
  vs_head("類別管理", str_site);
  prints(NECKER_PREFIX, d_cols, "");

  return prefix_body(xo);
}

static int
prefix_load(xo)
  XO *xo;
{
  xo_load(xo, sizeof(PREFIX));
  return prefix_body(xo);
}

static int
prefix_init(xo)
  XO *xo;
{
  xo_load(xo, sizeof(PREFIX));
  return prefix_head(xo);
}

static int
prefix_tag(xo)
  XO *xo;
{
  PREFIX *prefix;
  int tag, pos, cur;

  pos = xo->pos;
  cur = pos - xo->top;
  prefix = (PREFIX *) xo_pool + cur;

  if (tag = Tagger(prefix->stamp, pos, TAG_TOGGLE))
  {
    move(3 + cur, 0);
    prefix_item(++pos, prefix);
  }

  return xo->pos + 1 + XO_MOVE; /* lkchu.981201: 跳至下一項 */
}


static int
prefix_move(xo)
  XO *xo;
{
  PREFIX *prefix;
  int pos, cur, i;
  char buf[40], ans[5];

  pos = xo->pos;
  cur = pos - xo->top;
  prefix = (PREFIX *) xo_pool + cur;

  sprintf(buf, "請輸入第 %d 選項的新位置：", pos + 1);
  if (vget(b_lines, 0, buf, ans, 5, DOECHO))
  {
    i = atoi(ans) - 1;
    if (i < 0)
      i = 0;
    else if (i >= xo->max)
      i = xo->max - 1;

    if (i != pos)
    {
      if (!rec_del(xo->dir, sizeof(PREFIX), pos, NULL))
      {
        rec_ins(xo->dir, prefix, sizeof(PREFIX), i, 1);
        xo->pos = i;
        return prefix_load(xo);
      }
    }
  }
  return XO_FOOT;
}

static int
prefix_help(xo)
  XO *xo;
{
  xo_help("prefix");
  return XO_HEAD;
}


static KeyFunc prefix_cb[] =
{
  XO_INIT, prefix_init,
  XO_LOAD, prefix_load,
  XO_HEAD, prefix_head,
  XO_BODY, prefix_body,

  'r', prefix_query,
  'a', prefix_add,
  'E', prefix_change,
  'T', prefix_title,
  Ctrl('D'), prefix_prune,
  'd', prefix_delete,
  'D', prefix_rangedel,
  't', prefix_tag,
  'm', prefix_move,
  'h', prefix_help
};


int
XoPrefix(xo)
  XO *xo;
{

  if (bbstate & STAT_BM)
  {
    char fpath[64];

    brd_fpath(fpath, currboard, FN_PREFIX);
    xz[XZ_PREFIX - XO_ZONE].xo = xo = xo_new(fpath);
    xz[XZ_PREFIX - XO_ZONE].cb = prefix_cb;
    xover(XZ_PREFIX);
    free(xo);

    return XO_INIT;
  }

  return XO_NONE;
}
------------------------------------------------------------------------------

--
 [1;43m◤[46m◥[m Or[1mig[30min[m: [41m Maple-itoc˙動力核心 [36;47m cpu.tfcis.org [m
 [1;44m◣[41m◢[m A[1mut[30mho[mr: [1;33mTKyo [30m從 [31mcszone.twbbs.org [30m發表[m
